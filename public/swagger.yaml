openapi: 3.0.0
info:
  title: Admin Helper
  version: '0.2'
servers:
  - url: 'https://admin-helper-backend.herokuapp.com/api/v1'
  - url: 'http://localhost:3000/api/v1/'
tags:
  - name: Login
  - name: Employees
paths:
  '/employees/{id}':
    get:
      tags:
        - Employees
      summary: Find user by ID
      description: Returns a single pet
      operationId: getUserById
      parameters:
        - name: id
          in: path
          description: ID of user to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          $ref: '#/components/responses/UserSuccess'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Permission'
        '404':
          $ref: '#/components/responses/NotFound'
  /login:
    post:
      tags:
        - Login
      parameters:
        - name: email
          in: query
          required: true
          schema:
            type: string
        - name: password
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Will send `Authenticated`
          content:
            appclication/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        format: int64
                      email:
                        type: string
                      firstName:
                        type: string
                      lastName:
                        type: string
                      birthdate:
                        type: string
                        format: date
                      join_date:
                        type: string
                        format: date
                      status:
                        type: string
                      phone_number:
                        type: string
                      roles:
                        type: array
                        items:
                          type: string
                      hours:
                        type: array
                        items:
                          type: object
        '400':
          description: Invalid username/password supplied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /password:
    post:
      tags:
        - Forget Password
      summary: Step 1 Send Mail
      parameters:
        - name: email
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Send mail ok
          content:
            application/json:
              schema:
                type: string
        '404':
          description: User not found
          $ref: '#/components/responses/NotFound'
  /password/validate_token:
    post:
      tags:
        - Forget Password
      summary: Step 2 Verify Token
      parameters:
        - name: email
          in: query
          required: true
          schema:
            type: string
        - name: token
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: valid true
          content:
            application/json:
              schema:
                type: object
                properties:
                  valid:
                    type: boolean
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  '/password/{id}':
    patch:
      tags:
        - Forget Password
      summary: 'Step 3 Verify Token, Reset Password'
      parameters:
        - name: email
          in: query
          required: true
          schema:
            type: string
        - name: token
          in: query
          required: true
          schema:
            type: string
        - name: new_password
          in: query
          required: true
          schema:
            type: string
        - in: path
          name: id
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Update success
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
components:
  responses:
    NotFound:
      description: The specified resource was not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Permission:
      description: You do not have permission
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    UserSuccess:
      description: successful
      content:
        application/json:
          schema:
            type: object
            properties:
              id:
                type: integer
                format: int64
              email:
                type: string
              firstName:
                type: string
              lastName:
                type: string
              birthdate:
                type: string
                format: date
              join_date:
                type: string
                format: date
              status:
                type: string
              phone_number:
                type: string
              roles:
                type: array
                items:
                  type: string
              hours:
                type: array
                items:
                  type: object
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
        email:
          type: string
        encrypted_password:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        birthdate:
          type: string
          format: date
        join_date:
          type: string
          format: date
        status:
          type: string
        phone_number:
          type: string
        roles:
          type: string
        reset_password_token:
          type: string
        reset_password_sent_at:
          type: string
          format: datetime
    Error:
      type: object
      properties:
        status:
          type: integer
        message:
          type: string
      required:
        - code
        - message
      xml:
        name: User
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
security:
  - bearerAuth: []
