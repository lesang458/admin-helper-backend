openapi: 3.0.0
info:
  title: Admin Helper
  version: '0.2'
servers:
  - url: 'https://admin-helper-backend.herokuapp.com/api/v1'
  - url: 'http://localhost:3000/api/v1/'
tags:
  - name: Login
  - name: Employees
  - name: Day Off
paths:
  '/employees/{id}':
    get:
      tags:
        - Employees
      summary: Find user by ID
      description: Returns a single pet
      operationId: getUserById
      parameters:
        - name: id
          in: path
          description: ID of user to return
          required: true
          schema:
            type: integer
            format: int64
            example: 1
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: object
                properties: 
                  employee:
                    $ref: '#/components/schemas/Employee'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Permission'
        '404':
          $ref: '#/components/responses/NotFound'
  /login:
    post:
      tags:
        - Login
      parameters:
        - name: email
          in: query
          required: true
          schema:
            type: string
            example: 'admin@gmail.com'
        - name: password
          in: query
          required: true
          schema:
            type: string
            example: '123456'
      responses:
        '200':
          description: Will send `Authenticated`
          content:
            appclication/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                  user:
                    $ref: '#/components/schemas/Employee'
        '400':
          $ref: '#/components/responses/BadRequest'
  /password:
    post:
      tags:
        - Forget Password
      summary: Step 1 Send Mail
      parameters:
        - name: email
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Send mail ok
          content:
            application/json:
              schema:
                type: string
                example: ok
        '404':
          $ref: '#/components/responses/NotFound'
  /password/validate_token:
    post:
      tags:
        - Forget Password
      summary: Step 2 Verify Token
      parameters:
        - name: email
          in: query
          required: true
          schema:
            type: string
        - name: token
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: valid true
          content:
            application/json:
              schema:
                type: object
                properties:
                  valid:
                    type: boolean
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  '/password/{id}':
    patch:
      tags:
        - Forget Password
      summary: 'Step 3 Verify Token, Reset Password'
      parameters:
        - name: email
          in: query
          required: true
          schema:
            type: string
        - name: token
          in: query
          required: true
          schema:
            type: string
        - name: new_password
          in: query
          required: true
          schema:
            type: string
        - in: path
          name: id
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Update success
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: 'Update success'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /employees/{id}/day-off-requests/:
    post:
      tags:
      - Day Off
      parameters:
        - name: id
          in: path
          description: Employee ID
          required: true
          schema:
            type: integer
            format: int64
            example: 1
      summary: Create new DayOffRequest
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DayOffRequest'
      responses:
        '201':
          description: created day-off-request
          content:
            application/json:
              schema:
                type: object
                properties: 
                  employee:
                    $ref: '#/components/schemas/DayOffRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Permission'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/InvalidParams'
components:
  responses:
    NotFound:
      description: The specified resource was not found
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: integer
                example: 404
              message:
                type: string
                example: "Couldn't find User"
            required:
              - code
              - message
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: integer
                example: 401
              message:
                type: string
                example: "User authentication failed"
            required:
              - code
              - message
    Permission:
      description: You do not have permission
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: integer
                example: 403
              message:
                type: string
                example: "You do not have permission"
            required:
              - code
              - message
    BadRequest:
      description: Bad Request
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: integer
                example: 400
              message:
                type: string
                example: "Bad Request"
            required:
              - code
              - message
    InvalidParams:
      description: Invalid Params
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: integer
                example: 422
              message:
                type: string
                example: "Invalid Params"
            required:
              - code
              - message
  schemas:
    Employee:
      type: object
      properties:
        id:
          type: integer
          format: int64
        email:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        birthdate:
          type: string
          format: date
        join_date:
          type: string
          format: date
        status:
          type: string
        phone_number:
          type: string
        roles:
          type: array
          items:
            type: string
        hours:
          type: array
          items:
            type: object
    DayOffRequest:
      type: object
      properties:
        id:
          type: integer
          format: int64
        from_date:
          type: string
          format: date
          example: '2020-02-02'
        to_date:
          type: string
          format: date
          example: '2020-02-10'
        hours_per_day:
          type: string
          format: int64
          example: 4
        notes:
          type: string
          example: "here is notes"
        day_off_info_id:
          type: string
          format: int64
          example: 1
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
security:
- bearerAuth: []