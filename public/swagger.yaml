openapi: 3.0.0
info:
  title: Admin Helper
  version: "0.2"
servers:
- url: https://admin-helper-backend.herokuapp.com/api/v1
- url: http://localhost:3000/api/v1/

tags:
- name: Login
- name: Employees
paths:
  /employees/{id}:
    get:
      tags:
      - Employees
      summary: Find user by ID
      description: Returns a single pet
      operationId: getUserById
      parameters:
      - name: id
        in: path
        description: ID of user to return
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: successful operation
          content: {}
        403:
          description: You do not have permission
          content: {}
        404:
          description: User not found
          content: {}
  /login:
    post:
      tags:
      - Login
      parameters:
      - name: email
        in: query
        required: true
        schema:
          type: string
      - name: password
        in: query
        required: true
        schema:
          type: string
      responses:
        200:
          description: Will send `Authenticated`
          content: {}
        400:
          description: Invalid username/password supplied
  /password:
    post:
      tags:
        - Forget Password
      summary: Step 1 Send Mail
      parameters:
        - name: email
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Send mail ok
          content: {}
        '404':
          description: User not found
          content: {}
  /password/validate_token:
    post:
      tags:
        - Forget Password
      summary: Step 2 Verify Token
      parameters:
        - name: email
          in: query
          required: true
          schema:
            type: string
        - name: token
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: valid true
          content: {}
        '401':
          description: Expired token
          content: {}
        '404':
          description: User not found
          content: {}
  /password/{id}:
    patch:
      tags:
        - Forget Password
      summary: Step 3 Verify Token, Reset Password
      parameters:
        - name: email
          in: query
          required: true
          schema:
            type: string
        - name: token
          in: query
          required: true
          schema:
            type: string
        - name: new_password
          in: query
          required: true
          schema:
            type: string
        - in: path
          name: id
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Update success
          content: {}
        '401':
          description: Expired token
          content: {}
        '404':
          description: User not found
          content: {}
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
        email:
          type: string
        encrypted_password:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        birthdate:
          type: string
          format: date
        join_date:
          type: string
          format: date
        status:
          type: string
        phone_number:
          type: string
        roles:
          type: string
        reset_password_token:
          type: string
        reset_password_sent_at:
          type: string
          format: datetime
      xml:
        name: User
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT    
security:
  - bearerAuth: []