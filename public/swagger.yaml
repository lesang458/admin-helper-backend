openapi: 3.0.0
info:
  title: Admin Helper
  version: '0.2'
servers:
  - url: 'https://admin-helper-backend.herokuapp.com/api/v1'
  - url: 'http://localhost:3000/api/v1/'
tags:
  - name: Login
  - name: Forget Password
  - name: Employees
  - name: Day Off Category
  - name: Day Off Info
  - name: Day Off Request
  - name: Device Category
paths:
  '/device_histories/{id}':
    get:
      tags:
        - Device Histories
      summary: Find Device History by id
      description: Returns an Device History
      operationId: getDeviceHistoryById
      parameters:
        - name: id
          in: path
          description: ID of device history to return
          required: true
          schema:
            type: integer
            format: int64
            example: 1
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: object
                properties: 
                  device_history:
                    $ref: '#/components/schemas/DeviceHistory'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Permission'
        '404':
          $ref: '#/components/responses/NotFound'
  '/day_off_categories':
    get:
      tags:
        - Day Off Category
      summary: Get List DayOffCategories
      description: Returns List DayOffCategories
      parameters:
        - name: status
          in: query
          description: Status Of Day Off Category
          schema:
            type: string
            enum: ['ACTIVE', 'INACTIVE']
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: object
                properties: 
                  data:
                    $ref: '#/components/schemas/DayOffCategoryResponse'
                  meta:
                      $ref: '#/components/schemas/Pagination'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Permission'
    post:
      tags:
        - Day Off Category
      summary: Create DayOffCategory
      description: Create DayOffCategory
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestCreateDayOffCategory'
      responses:
        '201':
          description: created day-off-category
          content:
            application/json:
              schema:
                type: object
                properties: 
                  day_off_category:
                    $ref: '#/components/schemas/DayOffCategory'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Permission'
        '422':
          $ref: '#/components/responses/InvalidParams'
        '404':
          $ref: '#/components/responses/NotFound'
  '/day_off_categories/{id}':
    patch:
      tags:
        - Day Off Category
      summary: Update Day Off Category by id
      description: Returns an Day Off Category
      parameters:
        - name: id
          in: path
          description: ID of Day Off Category to return
          required: true
          schema:
            type: integer
            format: int64
            example: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestParamUpdateDayOffCategory'
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: object
                properties: 
                  day_off_category:
                    $ref: '#/components/schemas/DayOffCategory'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Permission'
        '422':
          $ref: '#/components/responses/InvalidParams'
  '/employees/{id}':
    get:
      tags:
        - Employees
      summary: Find employee by id
      description: Returns an employee
      operationId: getEmployeeById
      parameters:
        - name: id
          in: path
          description: ID of employee to return
          required: true
          schema:
            type: integer
            format: int64
            example: 1
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: object
                properties: 
                  user:
                    $ref: '#/components/schemas/Employee'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Permission'
        '404':
          $ref: '#/components/responses/NotFound'
    patch:
      tags:
        - Employees
      summary: Update employee by id
      description: Returns an employee
      parameters:
        - name: id
          in: path
          description: ID of employee to return
          required: true
          schema:
            type: integer
            format: int64
            example: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateEmployee'
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: object
                properties: 
                  user:
                    $ref: '#/components/schemas/Employee'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Permission'
        '404':
          $ref: '#/components/responses/NotFound'
        '400':
          $ref: '#/components/responses/BadRequest'
  /login:
    post:
      tags:
        - Login
      parameters:
        - name: email
          in: query
          required: true
          schema:
            type: string
            example: 'admin@gmail.com'
        - name: password
          in: query
          required: true
          schema:
            type: string
            example: '123456'
      responses:
        '200':
          description: Will send `Authenticated`
          content:
            appclication/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                  user:
                    $ref: '#/components/schemas/Employee'
        '400':
          $ref: '#/components/responses/BadRequest'
  /password:
    post:
      tags:
        - Forget Password
      summary: Step 1 Send Mail
      parameters:
        - name: email
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/RequestSuccess'
        '404':
          $ref: '#/components/responses/NotFound'
  /password/validate_token:
    post:
      tags:
        - Forget Password
      summary: Step 2 Verify Token
      parameters:
        - name: email
          in: query
          required: true
          schema:
            type: string
        - name: token
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/RequestSuccess'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /password/reset:
    patch:
      tags:
        - Forget Password
      summary: 'Step 3 Verify Token, Reset Password'
      parameters:
        - name: email
          in: query
          required: true
          schema:
            type: string
        - name: token
          in: query
          required: true
          schema:
            type: string
        - name: new_password
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/RequestSuccess'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /employees/{id}/day-off-requests/:
    post:
      tags:
      - Employees
      parameters:
        - name: id
          in: path
          description: Employee ID
          required: true
          schema:
            type: integer
            format: int64
            example: 1
      summary: Create new DayOffRequest
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestDayOffRequest'
      responses:
        '201':
          description: created day-off-request
          content:
            application/json:
              schema:
                type: object
                properties: 
                  day_off_requests:
                    $ref: '#/components/schemas/DayOffRequestResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Permission'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/InvalidParams'
  '/day_off_info/{id}':
    patch:
      tags:
      - Day Off Info
      parameters:
        - name: id
          in: path
          description: DayOffInfo ID
          required: true
          schema:
            type: integer
            format: int64
            example: 1
      summary: Update DayOffInfo
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DayOffInfo'
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: object
                properties: 
                  day_off_info:
                    $ref: '#/components/schemas/DayOffInfoResponse'
          
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Permission'
        '404':
          $ref: '#/components/responses/NotFound'
  /employees:
    get:
        tags:
          - Employees
        summary: Get list employee
        description: Returns list employee
        parameters:
          - name: search
            in: query
            description: Search with first name or last name
            required: false
            schema:
              type: string
          - name: status
            in: query
            description: Search with status
            required: false
            schema:
              type: string
          - name: birthday_from
            in: query
            description: Search with birthday from
            required: false
            schema:
              type: string
              format: date
              example: '2015-11-23'
          - name: birthday_to
            in: query
            description: Search with birthday to
            required: false
            schema:
              type: string
              format: date
              example: '2015-11-23'
          - name: joined_company_date_from
            in: query
            description: Search with joined company date from
            required: false
            schema:
              type: string
              format: date
              example: '2015-11-23'
          - name: joined_company_date_to
            in: query
            description: Search with joined company date to
            required: false
            schema:
              type: string
              format: date
              example: '2015-11-23'
            
          - name: day_off_from_date
            in: query
            description: Search with joined company date to
            required: false
            schema:
              type: string
              format: date
              example: '2015-11-23'
          - name: day_off_to_date
            in: query
            description: Search with joined company date to
            required: false
            schema:
              type: string
              format: date
              example: '2015-11-23'
          - name: page
            in: query
            description: pagination with the current page
            required: false
            schema:
              type: integer
              example: 1
          - name: per_page
            in: query
            description: pagination with the number of elements per page
            required: false
            schema:
              type: integer
              example: 20
          - name: sort
            in: query
            description: Sort with properties
            required: false
            schema:
              type: string
              example: 'first_name:DESC, last_name:ASC'
        responses:
          '200':
            description: successful
            content:
              application/json:
                schema:
                  type: object
                  properties: 
                    data:
                      type: array
                      items:
                        type: object
                        $ref: '#/components/schemas/Employee'
                    meta:
                      $ref: '#/components/schemas/Pagination'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Permission'
    post: 
      tags:
        - Employees
      summary: Create employee
      description: Returns list employee
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestParamCreateEmployee'
      responses:
          '201':
            description: successful
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Employee'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Permission'
          '422':
            $ref: '#/components/responses/InvalidParams'
  '/employees/{id}/status':
    patch:
      tags:
        - Employees
      summary: Update employee by ID
      description: Returns a single pet
      parameters:
        - name: id
          in: path
          description: ID of user to return
          required: true
          schema:
            type: integer
        - name: status
          in: query
          description: Status of employee
          required: true
          schema:
            type: string
            enum: [ACTIVE, FORMER]
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: object
                properties: 
                  employee:
                    $ref: '#/components/schemas/Employee'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Permission'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/InvalidParams'
  /device_histories:
    get:
        tags:
          - Device Histories
        summary: Get list Device Histories
        description: Returns list Device History
        parameters:
          - name: device_id
            description: Search with device id
            in: query
            schema:
              type: integer
              example: 1
          - name: status
            in: query
            description: Search with status
            schema:
              type: string
          - name: history_to
            in: query
            description: Search with history to
            schema:
              type: string
              format: date
              example: '2015-11-23'
          - name: history_from
            in: query
            description: Search with history from
            schema:
              type: string
              format: date
              example: '2015-11-23'
          - name: user_id
            description: Search with user id
            in: query
            schema:
              type: integer
              example: 1
          - name: device_category_id
            description: Search with device category id
            in: query
            schema:
              type: integer
              example: 1
          - name: page
            in: query
            description: pagination with the current page
            schema:
              type: integer
              example: 1
          - name: per_page
            in: query
            description: pagination with the number of elements per page
            schema:
              type: integer
              example: 20
        responses:
          '200':
            description: successful
            content:
              application/json:
                schema:
                  type: object
                  properties: 
                    data:
                      type: array
                      items:
                        type: object
                        $ref: '#/components/schemas/DeviceHistory'
                    meta:
                      $ref: '#/components/schemas/Pagination'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Permission'
  /device_categories:
    get:
      tags:
        - Device Category
      summary: Get list  Device Category
      description: Returns list Device Category
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: object
                properties: 
                  data:
                    type: array
                    items:
                      type: object
                      $ref: '#/components/schemas/DeviceCategory'
                  meta:
                    $ref: '#/components/schemas/Pagination'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Permission'
    post:
      tags:
      - Device Category
      summary: Create Device Category
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestParamsDeviceCategory'
      responses:
        '201':
          description: created day-off-request
          content:
            application/json:
              schema:
                type: object
                properties: 
                  device_category:
                    $ref: '#/components/schemas/DeviceCategory'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Permission'
        '404':
          $ref: '#/components/responses/NotFound'
  '/device_categories/{id}':
    parameters:
      - name: id
        in: path
        description: ID of device category to return
        required: true
        schema:
          type: integer
          format: int64
          example: 1
    get:
      tags:
        - Device Category
      summary: Find Device Category by id
      description: Returns an Device Category
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: object
                properties: 
                  device_category:
                    $ref: '#/components/schemas/DeviceCategory'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Permission'
        '404':
          $ref: '#/components/responses/NotFound'
    patch:
      tags:
      - Device Category
      summary: Update Device Category
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestParamsDeviceCategory'
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: object
                properties: 
                  device_category:
                    $ref: '#/components/schemas/DeviceCategory'
          
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Permission'
        '404':
          $ref: '#/components/responses/NotFound'
  /devices:
    post:
      tags:
      - Device
      summary: Create Device
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestParamsDevice'
      responses:
        '201':
          description: created device
          content:
            application/json:
              schema:
                type: object
                properties: 
                  device:
                    $ref: '#/components/schemas/Device'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Permission'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/InvalidParams' 
    get:
      tags:
        - Device
      summary: Get list  Device
      description: Returns list Device
      parameters:
          - name: status
            in: query
            description: Search with status
            schema:
              type: string
          - name: user_id
            in: query
            description: Search with user id
            schema:
              type: integer
              example: 1
          - name: device_category_id
            in: query
            description: Search with device category id
            schema:
              type: integer
              example: 1
          - name: page
            in: query
            description: pagination with the current page
            required: false
            schema:
              type: integer
              example: 1
          - name: per_page
            in: query
            description: pagination with the number of elements per page
            required: false
            schema:
              type: integer
              example: 20
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: object
                properties: 
                  data:
                    type: array
                    items:
                      type: object
                      $ref: '#/components/schemas/Device'
                  meta:
                    $ref: '#/components/schemas/Pagination'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Permission'
  '/devices/{id}':
    parameters:
      - name: id
        in: path
        description: ID of device category to return
        required: true
        schema:
          type: integer
          format: int64
          example: 1
    get:
      tags:
        - Device
      summary: Find Device by id
      description: Returns an Device
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: object
                properties: 
                  device:
                    $ref: '#/components/schemas/Device'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Permission'
        '404':
          $ref: '#/components/responses/NotFound'
    patch:
      tags:
      - Device
      summary: Update Device
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestParamsUpdateDevice'
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: object
                properties: 
                  device:
                    $ref: '#/components/schemas/Device'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Permission'
        '404':
          $ref: '#/components/responses/NotFound'
  '/devices/{id}/assign':
    put:
      tags:
      - Device
      summary: Assign Device
      parameters:
      - name: id
        in: path
        description: Update status of device
        required: true
        schema:
          type: integer
          format: int64
          example: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestParamsUpdateStatusDevice'
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: object
                properties: 
                  device:
                    $ref: '#/components/schemas/Device'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Permission'
        '404':
          $ref: '#/components/responses/NotFound'
  '/devices/{id}/move_to_inventory':
    put:
      tags:
      - Device
      summary: Move to inventory Device
      parameters:
      - name: id
        in: path
        description: Update status of device
        required: true
        schema:
          type: integer
          format: int64
          example: 1
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: object
                properties: 
                  device:
                    $ref: '#/components/schemas/Device'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Permission'
        '404':
          $ref: '#/components/responses/NotFound'
  '/devices/{id}/discard':
    put:
      tags:
      - Device
      summary: Discard Device
      parameters:
      - name: id
        in: path
        description: Update status of device
        required: true
        schema:
          type: integer
          format: int64
          example: 1
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: object
                properties: 
                  device:
                    $ref: '#/components/schemas/Device'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Permission'
        '404':
          $ref: '#/components/responses/NotFound'
  '/employees/{id}/password':
    patch:
      tags:
        - Employees
      summary: Update employee by ID
      description: Returns a single pet
      parameters:
        - name: id
          in: path
          description: ID of user to return
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePassword'
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: object
                properties: 
                  user:
                    $ref: '#/components/schemas/Employee'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Permission'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/InvalidParams'
  '/day_off_categories/{id}/deactivate':
    patch:
      tags:
      - Day Off Category
      summary: Deactivate
      parameters:
      - name: id
        in: path
        description: Update status of Day Off Category
        required: true
        schema:
          type: integer
          format: int64
          example: 1
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: object
                properties: 
                  device_category:
                    $ref: '#/components/schemas/DayOffCategoryResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Permission'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/InvalidParams'
        '400':
          $ref: '#/components/responses/BadRequest'
  '/day_off_categories/{id}/activate':
    patch:
      tags:
      - Day Off Category
      summary: Activate
      parameters:
      - name: id
        in: path
        description: Update status of Day Off Category
        required: true
        schema:
          type: integer
          format: int64
          example: 1
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: object
                properties: 
                  device_category:
                    $ref: '#/components/schemas/DayOffCategoryResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Permission'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/InvalidParams'
        '400':
          $ref: '#/components/responses/BadRequest'
  '/day_off_request/{id}':
    parameters:
      - name: id
        in: path
        description: Update Day Off Request
        required: true
        schema:
          type: integer
          format: int64
          example: 1
    delete:
      tags:
      - Day Off Request
      summary: Update Day Off Request
      responses:
        204:
          description: Day Off Request was deleted successfully
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Permission'
        404:
          $ref: '#/components/responses/NotFound'
    put:
      tags:
      - Day Off Request
      summary: Update Day Off Request
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestDayOffRequest'
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: object
                properties: 
                  day_off_request:
                    $ref: '#/components/schemas/DayOffRequestResponse'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Permission'
        404:
          $ref: '#/components/responses/NotFound'
        422:
          $ref: '#/components/responses/InvalidParams'
  /day_off_request:
    get:
        tags:
          - Day Off Request
        summary: Get list Day Off Request
        description: Returns list Day Off Request
        parameters:
          - name: employee_name
            in: query
            description: Search by employee name
            required: false
            schema:
              type: string
          - name: day_off_category_id
            in: query
            description: Search with day off category id
            required: false
            schema:
              type: integer
          - name: user_id
            in: query
            description: Search with day off user id
            required: false
            schema:
              type: integer
          - name: from_date
            in: query
            description: Search with from date
            required: false
            schema:
              type: string
              format: date
              example: '2015-11-23'
          - name: to_date
            in: query
            description: Search with to date
            required: false
            schema:
              type: string
              format: date
              example: '2015-11-23'
          - name: page
            in: query
            description: pagination with the current page
            required: false
            schema:
              type: integer
              example: 1
          - name: per_page
            in: query
            description: pagination with the number of elements per page
            required: false
            schema:
              type: integer
              example: 20
        responses:
          '200':
            description: successful
            content:
              application/json:
                schema:
                  type: object
                  properties: 
                    data:
                      type: array
                      items:
                        type: object
                        $ref: '#/components/schemas/DayOffRequest'
                    meta:
                      $ref: '#/components/schemas/Pagination'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Permission'
          '404':
            $ref: '#/components/responses/NotFound'
  '/day_off_info/{id}/deactivate':
    patch:
      tags:
      - Day Off Info
      summary: Deactivate
      parameters:
      - name: id
        in: path
        description: Update status of Day Off Info
        required: true
        schema:
          type: integer
          format: int64
          example: 1
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: object
                properties: 
                  day_off_info:
                    $ref: '#/components/schemas/DayOffInfoResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Permission'
        '404':
          $ref: '#/components/responses/NotFound'
        '400':
          $ref: '#/components/responses/BadRequest'
  /day_off_info:
    post:
      tags:
      - Day Off Info
      summary: Create Day Off Info
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestDayOffInfo'
      responses:
        '201':
          description: created day off info
          content:
            application/json:
              schema:
                type: object
                properties: 
                  day_off_info:
                    $ref: '#/components/schemas/DayOffInfoResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Permission'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/InvalidParams' 
  '/employees/{id}/day_off_infos':
    get:
      tags:
        - Employees
      summary: Get DayOffInfos by employee ID
      description: Get DayOffInfos by employee ID
      parameters:
        - name: id
          in: path
          description: ID of employee
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: object
                properties: 
                  data:
                    $ref: '#/components/schemas/DayOffInfoResponse'
                  meta:
                      $ref: '#/components/schemas/Pagination'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Permission'
        '404':
          $ref: '#/components/responses/NotFound'
  '/employees/{id}/devices':
    get:
      tags:
        - Employees
      summary: Get Devices by employee ID
      description: Get devices belongs to employees
      parameters:
        - name: id
          in: path
          description: ID of employee
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: object
                properties: 
                  data:
                    type: array
                    items:
                      type: object
                      $ref: '#/components/schemas/Device'
                  meta:
                    $ref: '#/components/schemas/Pagination'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Permission'
        '404':
          $ref: '#/components/responses/NotFound'
components:
  responses:
    RequestSuccess:
      description: Request Success
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: integer
                example: 422
              message:
                type: string
                example: "Request Success"
            required:
              - code
              - message
    NotFound:
      description: The specified resource was not found
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: integer
                example: 404
              message:
                type: string
                example: "Couldn't find with 'id'="
            required:
              - code
              - message
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: integer
                example: 401
              message:
                type: string
                example: "User authentication failed"
            required:
              - code
              - message
    Permission:
      description: You do not have permission
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: integer
                example: 403
              message:
                type: string
                example: "You do not have permission"
            required:
              - code
              - message
    BadRequest:
      description: Bad Request
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: integer
                example: 400
              message:
                type: string
                example: "Bad Request"
            required:
              - code
              - message
    InvalidParams:
      description: Invalid Params
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: integer
                example: 422
              message:
                type: string
                example: "Invalid Params"
            required:
              - code
              - message
  schemas:
    RequestParamsUpdateStatusDevice:
      type: object
      properties:
        user_id:
          type: integer
    RequestParamsUpdateDevice:
      type: object
      properties:
        name:
          type: string
        price:
          type: integer
        description:
          type: string
        device_category_id:
          type: integer
    RequestParamsDevice:
      type: object
      properties:
        name:
          type: string
        price:
          type: integer
        description:
          type: string
        device_category_id:
          type: integer
        from_date:
          type: string
          format: date
        status:
          type: string
          enum: [DISCARDED, ASSIGNED, IN_INVENTORY]
    Device:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        price:
          type: integer
        description:
          type: string
        device_category_id:
          type: integer
        category_name:
          type: string
        user:
          type: object
        status:
          type: string
    RequestParamsDeviceCategory:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
    DeviceCategory:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
    DeviceHistory:
      type: object
      properties:
        id:
          type: integer
        from_date:
          type: string
          format: date
        to_date:
          type: integer
          format: date
        user:
          type: object
          properties:
            id:
              type: integer
            first_name:
              type: string
            last_name:
              type: string
        device:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
            price:
              type: string
            description:
              type: string
    RequestParamUpdateDayOffCategory:
      type: object
      properties:
        name:
          type: string
          enum: [VACATION, ILLNESS]
        description:
          type: string
          minLength: 3
        total_hours_default:
          type: integer
    RequestParamCreateEmployee:
      type: object
      properties:
        email:
          type: string
          example: "new_employee@gmail.com"
        first_name:
          type: string
          example: "employee"
        last_name:
          type: string
          example: "user"
        birthdate:
          type: string
          format: date
          example: "2020-02-02"
        join_date:
          type: string
          format: date
          example: "2019-11-09"
        status:
          type: string
          enum: [ACTIVE, FORMER]
        phone_number:
          type: string
          example: "123456789"
        password:
          type: string
          example: "123456"
        roles:
          type: array
          items:
            type: string
            example: EMPLOYEE
        day_off_infos_attributes:
          type: array
          items:
            type: object
            properties:
              day_off_category_id:
                type: integer
                example: 1
              hours:
                type: integer
                example: 160
          example:
            - day_off_category_id: 1
              hours: 160
            - day_off_category_id: 2
              hours: 160
      required:
        - email
        - last_name
        - first_name
        - status
        - phone_number
    Pagination:
      type: object
      properties:
        current_page:
          type: integer
          example: 1
        page_size:
          type: integer
          example: 1
        total_pages:
          type: integer
          example: 1
        total_count:
          type: integer
          example: 1
    DayOffCategory:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: "Summer"
        total_hours_default:
          type: integer
          example: 16
        status:
          type: string
          example: active
        description:
          type: string
          example: "When don't go to school"
      required:
      - name
      - total_hours_default
    RequestDayOffInfo:
      type: object
      properties:
        user_id:
          type: integer
          format: int64
          example: 1
        hours:
          type: integer
          format: int64
          example: 160
        day_off_category_id:
          type: integer
          format: int64
          example: 1
      required:
        - hours
        - day_off_category_id
        - user_id
    DayOffInfo:
      type: object
      properties:
        hours:
          type: integer
          format: int64
          example: 160
        day_off_category_id:
          type: integer
          format: int64
          example: 1
      required:
        - hours
        - day_off_category_id
    Employee:
      type: object
      properties:
        id:
          type: integer
          format: int64
        email:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        birthdate:
          type: string
          format: date
        join_date:
          type: string
          format: date
        status:
          type: string
          enum: [ACTIVE, FORMER]
        phone_number:
          type: string
        roles:
          type: array
          items:
            type: string
        day_off_infos:
          type: array
          items:
            type: object
            properties:
              day_off_category_id:
                type: integer
                format: int64
              hours:
                type: integer
                format: int64
              category_name:
                type: string
                example: 'VACATION'
              available_hours:
                type: integer
                format: int64
          example:
                - day_off_category_id: 1
                  hours: 160
                  category_name: 'VACATION'
                  available_hours: 220
                - day_off_category_id: 2
                  hours: 160
                  category_name: 'ILLNESS'
                  available_hours: 220
    RequestDayOffRequest:
      type: object
      properties:
        from_date:
          type: string
          format: date
          example: '2020-02-02'
        to_date:
          type: string
          format: date
          example: '2020-02-10'
        hours_per_day:
          type: string
          format: int64
          example: 4
        notes:
          type: string
          example: "here is notes"
        day_off_category_id:
          type: string
          format: int64
          example: 1
      required:
        - from_date
        - to_date
        - hours_per_day
        - day_off_category_id
    DayOffRequest:
      type: object
      properties:
        id:
          type: integer
          example: 1
        email:
          type: string
          example: 'employee@gmail.com'
        first_name:
          type: string
          example: 'admin'
        last_name:
          type: string
          example: 'user'
        from_date:
          type: string
          format: date
          example: '2020-02-02'
        to_date:
          type: string
          format: date
          example: '2020-02-10'
        hours_per_day:
          type: string
          format: int64
          example: 4
        notes:
          type: string
          example: "here is notes"
        day_off_category:
          type: object
          properties:
            id:
              type: integer
              example: 1
            name:
              type: string
              example: 'VACATION'
            description:
              type: string
              example: 'description'
            total_hours_default:
              type: integer
              example: 120
            status:
              type: string
              example: 'active'
    DayOffRequestResponse:
      type: array
      items:
        type: object
        properties:
          id:
            type: integer
            format: int64
            example: 1
          email:
            type: string
            example: "employee@gmail.com"
          first_name:
            type: string
            example: "example"
          last_name:
            type: string
            example: "user"
          from_date:
            type: string
            format: date
            example: '2020-02-02'
          to_date:
            type: string
            format: date
            example: '2020-02-10'
          hours_per_day:
            type: string
            format: int64
            example: 4
          notes:
            type: string
            example: "here is notes"
          day_off_category:
            type: object
            properties:
              id:
                type: integer
                format: int64
                example: 1
              name:
                type: string
                example: "VACATION"
              description:
                type: string
                description: "description"
              total_hours_default:
                type: integer
                format: int64
                example: 1
              status:
                type: string
                example: "active"
    DayOffCategoryResponse:
      type: array
      items:
        type: object
        properties:
          id:
            type: integer
            format: int64
            example: 1
          name:
            type: string
            example: "VACATION"
          description:
            type: string
            example:
          total_hours_default:
            type: integer
            example: 15
          status:
            type: string
            example: 'active'
    DayOffInfoResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        hours:
          type: integer
          format: int64
          example: 160
        day_off_category_id:
          type: integer
          format: int64
          example: 1
        category_name:
          type: string
          example: "VACATION"
        description:
          type: string
          example:
        user_id:
          type: integer
          format: int64
          example: 1
        hours_per_day:
          type: string
          format: int64
          example: 4
        email:
          type: string
          example: "employee@gmail.com"
        first_name:
          type: string
          example: "user"
        last_name:
          type: string
          example: "employee"
        status:
          type: string
          example: "inactive"
    UpdateEmployee:
      type: object
      properties:
        email:
          type: string
          example: "newemployee@gmail.com"
        first_name:
          type: string
          example: "dang"
        last_name:
          type: string
          example: "hanh"
        birthdate:
          type: string
          format: date
        join_date:
          type: string
          format: date
        phone_number:
          type: string
          example: "123456789"
        day_off_infos_attributes:
          type: array
          items:
            type: object
            properties:
              day_off_category_id:
                type: integer
                example: 1
              status: 
                type: string 
              hours:
                type: integer
                example: 160
          example:
            - day_off_category_id: 1
              hours: 120
              status: 'active'
            - day_off_category_id: 2
              hours: 160
              status: 'inactive'
            - day_off_category_id: 3
              hours: 180
              status: 'active'
    RequestCreateDayOffCategory:
      type: object
      properties:
        name:
          type: string
          example: "Summer"
        total_hours_default:
          type: integer
          example: 16
        description:
          type: string
          example: "When don't go to school"
        apply_for_all_employees:
          type: boolean
          example: true
        employee_ids:
          type: array
          items:
            type: string
            example: 1
      required:
      - name
      - total_hours_default
    UpdatePassword:
      type: object
      properties:
        old_password:
          type: string
          example: "123456"
        new_password:
          type: string
          example: "123456789"
      required:
      - old_password
      - new_password
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
security:
  - bearerAuth: []
